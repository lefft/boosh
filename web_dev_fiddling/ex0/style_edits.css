@import url('https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700|Roboto+Mono:400,700');
/*or: <link href="https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700|Roboto+Mono:400,700" rel="stylesheet">*/


h3 {
	font-family: 'Noto Sans', sans-serif;
  outline: black dotted thin;
}

h2 {
  font-family: 'Noto Sans', sans-serif;
  outline: black dotted thin;
}


/* hash ~~~> *id* selector */
# footer {
	font-size: 1em;
  outline: black dotted thin;
}


html, body {
  font-family: sans-serif;
  margin: 0;
  width: 100%;
  height: 100%;
  font-family: 'Roboto Mono', monospace;
  outline: black dotted thin;
}


/* say how a tag behaves inside a tag(?) class(??) */
nav li {
  margin: 0;
  padding: 0 10px;
  display: inline;
  outline: black dotted thin;
}



h1 {
  font-size: 48px;
  outline: black dotted thin;
}

p {
  max-width: 65%;
  min-width: 500px;
  outline: black dotted thin;
}

h2 {
  text-align: center;
  font-size: 2.6rem;
  outline: black dotted thin;
}

/* no dot or hash ~~~> *tag* selector */
div {
  padding-right: 30px;
  height: 100%;
  width: 100%;
  outline: black dotted thin;
}




/* dot ~~~> *class* selector */
.container {
  display: flex;
  /*display: inline;*/
}

.main {
  padding-left: 30px;
  min-width: 75%;
}

.nav {
  background-color: #FFEE00;
  max-width: 25%;
  min-width: 140px;
  max-height: 50%;
  flex: 1;
  top: 0;
  position: relative;
}

.nav h1 {
  padding-left: 20px;
}


/* border: sets the outline of an HTML page element, like a picture frame that contains the element.

padding: sets the amount of space between an element's content and its border.

margin: sets the amount of space between an HTML element and the next nearest element(s).

display: property that determines how the selected element will be arranged in relation to other HTML elements on the page.

inline: display value used to arrange HTML elements on the same line as neighboring elements.

flex: display value that allows us to easily align multiple page elements vertically or horizontally.

float: property used to float HTML elements left or right of neighboring elements.

position: property used to position HTML elements in exact locations on a webpage. */